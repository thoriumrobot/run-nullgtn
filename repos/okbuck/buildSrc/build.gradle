import java.text.SimpleDateFormat

buildscript {
    apply from: "../dependencies.gradle"
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath deps.build.errorpronePlugin
        classpath deps.build.rockerPlugin
    }
}

apply plugin: "maven-publish"
apply plugin: "com.fizzed.rocker"
apply plugin: "net.ltgt.errorprone"

apply from: "../dependencies.gradle"

repositories {
    mavenCentral()
    gradlePluginPortal()
    google()
    maven { url "https://groovy.jfrog.io/artifactory/libs-release" }
    maven { url "https://repo1.maven.org/maven2/" }
    // Remove once butterknife is updated to a stable version
    // TODO: https://github.com/uber/okbuck/issues/570
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

jar {
    exclude("**/*.rocker.raw")
}

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

sourceSets.main.java.srcDirs = ["src/main/rocker", "src/main/java"]
sourceSets.main.rocker.srcDirs = ["src/main/rocker", "src/main/java"]

dependencies {
    annotationProcessor deps.apt.autoValue
    annotationProcessor deps.build.nullaway

    errorprone deps.build.erroproneCompiler
    compileOnly deps.external.inferAnnotations
    compileOnly deps.apt.autoValueAnnotations

    implementation gradleApi()

    implementation deps.build.androidPlugin
    implementation deps.build.androidPluginApi
    implementation deps.build.commonsIo
    implementation deps.build.commonsLang3
    implementation deps.build.kotlinPlugin
    implementation deps.build.kotlinAllOpen
    implementation deps.build.rockerRuntime

    testImplementation deps.test.junit
}

rocker {
    discardLogicWhitespace true
    optimize true
    extendsClass "com.uber.okbuck.template.core.RuleTemplate"
    extendsModelClass "com.uber.okbuck.template.core.Rule"
}

tasks.withType(JavaCompile) {
    options.compilerArgs += [
            "-Werror",
            "-XepAllDisabledChecksAsWarnings",
            "-XepDisableWarningsInGeneratedCode",
            "-Xep:NullAway:ERROR",
            "-XepOpt:NullAway:AnnotatedPackages=com.uber",
            "-XepOpt:NullAway:TreatGeneratedAsUnannotated=true",
            "-Xep:BooleanParameter:OFF",
            "-Xep:ReturnMissingNullable:OFF",
            "-Xep:ConstructorInvokesOverridable:OFF",
            "-Xep:FieldCanBeFinal:OFF",
            "-Xep:ConstantField:WARN",
            "-Xep:MixedArrayDimensions:WARN",
            "-Xep:MultipleTopLevelClasses:WARN",
            "-Xep:MultiVariableDeclaration:WARN",
            "-Xep:PackageLocation:WARN",
            "-Xep:RemoveUnusedImports:OFF",
            "-Xep:ThrowsUncheckedException:WARN",
            "-Xep:UnnecessaryStaticImport:WARN",
            "-Xep:WildcardImport:WARN",
    ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from "build/docs/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = "sources"
}

def publishVersion = "0.45.1"
group = "com.uber"
version = publishVersion
def siteUrl = "https://github.com/uber/okbuck"
def gitUrl = "https://github.com/uber/okbuck.git"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            artifactId "okbuck"
        }
    }
}


