.level=FINE

# Enable console logging handler and file handler to write rotating log files under
# buck-out/log/buck-*.log in the project(s) being used.
handlers=com.facebook.buck.cli.bootstrapper.ConsoleHandler,com.facebook.buck.cli.bootstrapper.LogFileHandler,com.facebook.buck.cli.bootstrapper.MemoryHandler,java.util.logging.FileHandler

# We handle console events via the event bus, so disable console logging by default.
com.facebook.buck.log.ConsoleHandler.level=SEVERE

# http client is way too chatty at FINER level.
httpclient.wire.content.level=SEVERE
httpclient.wire.header.level=SEVERE

# Log to buck-out/log/buck-*.log.
java.util.logging.FileHandler.pattern=buck-out/log/buck-%g.log

# Write to disk all log messages not otherwise filtered by the top-level ".level" property.
java.util.logging.FileHandler.level=ALL

# Rotate up to this many log files, then start deleting the oldest one.
java.util.logging.FileHandler.count=5

# Replace the default fugly multiline log formatter with a custom one.
java.util.logging.FileHandler.formatter=com.facebook.buck.cli.bootstrapper.LogFormatter

# Ignore the environment and always write UTF-8 to files.
java.util.logging.FileHandler.encoding=UTF-8

# Use a circular buffer to store high granularity logging in memory, only interesting if we hit
# an error.
com.facebook.buck.log.memory.MemoryHandler.level=ALL

# Define the buffer size.
com.facebook.buck.log.memory.MemoryHandler.size=100

# Define the push level.
com.facebook.buck.log.memory.MemoryHandler.push=SEVERE

# Max size in bytes all logs will take.
com.facebook.buck.log.LogFileHandler.max_size_bytes=100000

# Max number of logs preserved in disk.
com.facebook.buck.log.LogFileHandler.count=5
