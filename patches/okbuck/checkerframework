diff --git a/build.gradle b/build.gradle
index 7c652fc..6b7fd02 100644
--- a/build.gradle
+++ b/build.gradle
@@ -44,6 +44,10 @@ allprojects { project ->
 
 apply plugin: "com.uber.okbuck"
 
+apply plugin: 'java'
+// Checker Framework pluggable type-checking
+apply from: rootProject.file("gradle/checkerframework.gradle")
+
 subprojects { project ->
     afterEvaluate {
         if (project.plugins.hasPlugin("java")) {
diff --git a/buildSrc/build.gradle b/buildSrc/build.gradle
index aad6d7f..7939c61 100644
--- a/buildSrc/build.gradle
+++ b/buildSrc/build.gradle
@@ -41,7 +41,6 @@ sourceSets.main.rocker.srcDirs = ["src/main/rocker", "src/main/java"]
 
 dependencies {
     annotationProcessor deps.apt.autoValue
-    annotationProcessor deps.build.nullaway
 
     errorprone deps.build.erroproneCompiler
     compileOnly deps.external.inferAnnotations
@@ -71,9 +70,6 @@ tasks.withType(JavaCompile) {
             "-Werror",
             "-XepAllDisabledChecksAsWarnings",
             "-XepDisableWarningsInGeneratedCode",
-            "-Xep:NullAway:ERROR",
-            "-XepOpt:NullAway:AnnotatedPackages=com.uber",
-            "-XepOpt:NullAway:TreatGeneratedAsUnannotated=true",
             "-Xep:BooleanParameter:OFF",
             "-Xep:ReturnMissingNullable:OFF",
             "-Xep:ConstructorInvokesOverridable:OFF",
diff --git a/dependencies.gradle b/dependencies.gradle
index 387fa91..96b02db 100644
--- a/dependencies.gradle
+++ b/dependencies.gradle
@@ -24,7 +24,6 @@ def build = [
         kotlinPlugin     : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
         kotlinAllOpen    : "org.jetbrains.kotlin:kotlin-allopen:${versions.kotlin}",
         manifestMerger   : "com.android.tools.build:manifest-merger:26.1.2",
-        nullaway         : "com.uber.nullaway:nullaway:0.5.3",
         rockerPlugin     : "gradle.plugin.com.fizzed:rocker-gradle-plugin:${versions.rocker}",
         rockerRuntime    : "com.fizzed:rocker-runtime:${versions.rocker}",
         shadowJar        : "com.github.jengelman.gradle.plugins:shadow:2.0.1",
diff --git a/gradle/checkerframework.gradle b/gradle/checkerframework.gradle
new file mode 100644
index 0000000..8479e05
--- /dev/null
+++ b/gradle/checkerframework.gradle
@@ -0,0 +1,25 @@
+dependencies {
+  if (System.getenv("CHECKERFRAMEWORK") == null) {
+    throw new GradleException("Environment variable CHECKERFRAMEWORK is not set.")
+  } else if (! file(System.getenv("CHECKERFRAMEWORK")).exists()) {
+    throw new GradleException("Environment variable CHECKERFRAMEWORK is set to non-existent directory: " + System.getenv("CHECKERFRAMEWORK"));
+  } else {
+    implementation files("${System.env.CHECKERFRAMEWORK}/checker/dist/checker-qual.jar")
+  }
+}
+
+allprojects {
+  tasks.withType(JavaCompile) {
+    // options.fork = true
+    // options.forkOptions.executable = "${System.env.CHECKERFRAMEWORK}/checker/bin/javac".toString()
+    options.compilerArgs += [
+      '-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
+      '-Xmaxerrs', '10000',
+      '-Awarns',
+      '-classpath', "${System.env.CHECKERFRAMEWORK}/checker/dist/checker-qual.jar".toString(),
+      '-processorpath', "${System.env.CHECKERFRAMEWORK}/checker/dist/checker.jar".toString(),
+      "-Xbootclasspath/p:${System.env.CHECKERFRAMEWORK}/checker/dist/jdk8.jar".toString(),
+      "-Astubs=${System.env.CHECKERFRAMEWORK}/checker/resources/javadoc.astub".toString()
+    ]
+  }
+}
diff --git a/java-app/build.gradle b/java-app/build.gradle
index 0829f2e..b025d54 100644
--- a/java-app/build.gradle
+++ b/java-app/build.gradle
@@ -1,6 +1,8 @@
 apply plugin: "java-library"
 apply plugin: "application"
 
+mainClassName = 'com.uber.okbuck.example.javalib.DummyJavaClass'
+
 dependencies {
     implementation deps.external.gson
     implementation deps.external.dagger
diff --git a/libraries/customLintLibrary/build.gradle b/libraries/customLintLibrary/build.gradle
index 6bc3569..712e316 100644
--- a/libraries/customLintLibrary/build.gradle
+++ b/libraries/customLintLibrary/build.gradle
@@ -1,6 +1,8 @@
 apply plugin: "java-library"
 apply plugin: "application"
 
+mainClassName = 'com.uber.lint.LintRegistry'
+
 dependencies {
     compileOnly deps.lint.lintApi
     compileOnly deps.lint.lintChecks
diff --git a/libraries/emptylibrary/build.gradle b/libraries/emptylibrary/build.gradle
index 56d177f..c403c73 100644
--- a/libraries/emptylibrary/build.gradle
+++ b/libraries/emptylibrary/build.gradle
@@ -4,6 +4,12 @@ android {
     lintOptions {
         disable "HardcodedDebugMode"
     }
+    // https://stackoverflow.com/questions/45922916/robolectric-resourcesnotfoundexception-string-resource-id-with-android-gradle
+	testOptions {
+		unitTests {
+			includeAndroidResources = true
+		}
+	}
 }
 
 dependencies {
diff --git a/libraries/lintErrorLibrary/build.gradle b/libraries/lintErrorLibrary/build.gradle
index f351b0b..35aa4e6 100644
--- a/libraries/lintErrorLibrary/build.gradle
+++ b/libraries/lintErrorLibrary/build.gradle
@@ -13,5 +13,6 @@ dependencies {
 android {
     lintOptions {
 	    warningsAsErrors true
+		abortOnError false
     }
 }
